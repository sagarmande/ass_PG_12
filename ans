

1. Python program to extract unique values from dictionary values:

```python
def extract_unique_values(dictionary):
    unique_values = set()
    for values in dictionary.values():
        unique_values.update(values)
    return list(unique_values)

sample_dict = {'a': [1, 2, 3], 'b': [2, 3, 4], 'c': [3, 4, 5]}
unique_values = extract_unique_values(sample_dict)
print("Unique values:", unique_values)
```

2. Python program to find the sum of all items in a dictionary:

```python
def sum_dictionary_items(dictionary):
    return sum(dictionary.values())

sample_dict = {'a': 10, 'b': 20, 'c': 30}
total = sum_dictionary_items(sample_dict)
print("Sum of dictionary items:", total)
```

3. Python program to merge two dictionaries:

```python
def merge_dicts(dict1, dict2):
    result = dict1.copy()
    result.update(dict2)
    return result

dict1 = {'a': 1, 'b': 2}
dict2 = {'b': 3, 'c': 4}
merged_dict = merge_dicts(dict1, dict2)
print("Merged dictionary:", merged_dict)
```

4. Python program to convert key-values list to a flat dictionary:

```python
def list_to_flat_dict(key_value_list):
    flat_dict = {}
    for key, value in key_value_list:
        flat_dict[key] = value
    return flat_dict

key_value_list = [('a', 1), ('b', 2), ('c', 3)]
flat_dictionary = list_to_flat_dict(key_value_list)
print("Flat dictionary:", flat_dictionary)
```

5. Python program to insert at the beginning in an OrderedDict:

```python
from collections import OrderedDict

def insert_at_beginning(ordered_dict, key, value):
    ordered_dict[key] = value
    ordered_dict.move_to_end(key, last=False)

ordered_dict = OrderedDict([('a', 1), ('b', 2), ('c', 3)])
insert_at_beginning(ordered_dict, 'x', 0)
print("OrderedDict after insertion:", ordered_dict)
```

6. Python program to check the order of characters in a string using OrderedDict:

```python
from collections import OrderedDict

def check_order_of_characters(input_string, pattern):
    pattern_dict = OrderedDict.fromkeys(pattern)
    pattern_length = len(pattern)
    string_length = len(input_string)
    
    if pattern_length > string_length:
        return False

    start = 0
    for char in input_string:
        if char in pattern_dict:
            start += 1
            if start == pattern_length:
                return True

    return False

input_string = "hello world"
pattern = "owd"
if check_order_of_characters(input_string, pattern):
    print("Pattern found in string in order.")
else:
    print("Pattern not found in string in order.")
```

7. Python program to sort dictionaries by key or value:

To sort by key:

```python
sample_dict = {'b': 3, 'a': 1, 'c': 2}
sorted_dict_by_key = dict(sorted(sample_dict.items()))
print("Sorted by key:", sorted_dict_by_key)
```

To sort by value:

```python
sample_dict = {'b': 3, 'a': 1, 'c': 2}
sorted_dict_by_value = dict(sorted(sample_dict.items(), key=lambda item: item[1]))
print("Sorted by value:", sorted_dict_by_value)
```

These programs should help you perform various operations on dictionaries in Python.
